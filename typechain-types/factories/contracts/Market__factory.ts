/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Market, MarketInterface } from "../../contracts/Market";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
    ],
    name: "End",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "started",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "NewBidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawBid",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bids",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "endMarketAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "highestBid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidder",
            type: "address",
          },
          {
            internalType: "bool",
            name: "started",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "ended",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "highestBid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidder",
            type: "address",
          },
          {
            internalType: "bool",
            name: "started",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "ended",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "highestBid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidder",
            type: "address",
          },
          {
            internalType: "bool",
            name: "started",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "ended",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bid",
        type: "uint256",
      },
    ],
    name: "placeBidOnAuction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "withdrawBids",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405266354a6ba7a1800060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612e58806100746000396000f3fe60806040526004361061009c5760003560e01c806381b3fc231161006457806381b3fc231461017b5780638da5cb5b146101a4578063c78f19f9146101cf578063e346c7da146101fa578063edb5f90514610216578063f064c32e146102325761009c565b80630f08efe0146100a157806312e85585146100cc578063202e3740146100f7578063599ba2341461012257806362ea82db1461013e575b600080fd5b3480156100ad57600080fd5b506100b661025d565b6040516100c391906127f2565b60405180910390f35b3480156100d857600080fd5b506100e161062a565b6040516100ee91906129b4565b60405180910390f35b34801561010357600080fd5b5061010c610634565b60405161011991906127f2565b60405180910390f35b61013c600480360381019061013791906121ee565b610a85565b005b34801561014a57600080fd5b506101656004803603810190610160919061213a565b610ee7565b60405161017291906129b4565b60405180910390f35b34801561018757600080fd5b506101a2600480360381019061019d9190612163565b610eff565b005b3480156101b057600080fd5b506101b96114ed565b6040516101c6919061266d565b60405180910390f35b3480156101db57600080fd5b506101e4611513565b6040516101f191906129b4565b60405180910390f35b610214600480360381019061020f919061219f565b611519565b005b610230600480360381019061022b9190612251565b611903565b005b34801561023e57600080fd5b50610247611bdc565b60405161025491906127f2565b60405180910390f35b6060600061026b600161202d565b90506000610279600261202d565b610283600161202d565b61028d9190612a7a565b90506000808267ffffffffffffffff8111156102d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561030b57816020015b6102f8612051565b8152602001906001900390816102f05790505b50905060005b8481101561061f57600073ffffffffffffffffffffffffffffffffffffffff16600560006001846103429190612a24565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561060c576000600560006001846103a39190612a24565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610180016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152602001600782015481526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff161515151581526020016009820154815250508486815181106105ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001856106079190612a24565b945050505b808061061790612b3e565b915050610311565b508094505050505090565b6000600454905090565b60606000610642600161202d565b905060008060005b838110156106eb573373ffffffffffffffffffffffffffffffffffffffff166005600060018461067a9190612a24565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106d8576001836106d59190612a24565b92505b80806106e390612b3e565b91505061064a565b5060008267ffffffffffffffff81111561072e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561076757816020015b610754612051565b81526020019060019003908161074c5790505b50905060005b84811015610a7a573373ffffffffffffffffffffffffffffffffffffffff166005600060018461079d9190612a24565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a67576000600560006001846107fe9190612a24565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610180016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152602001600782015481526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff16151515158152602001600982015481525050848681518110610a4a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185610a629190612a24565b945050505b8080610a7290612b3e565b91505061076d565b508094505050505090565b60026000541415610acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac290612954565b60405180910390fd5b600260008190555060008211610b16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0d90612834565b60405180910390fd5b6004543414610b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b51906128f4565b60405180910390fd5b610b64600161203b565b6000610b70600161202d565b90506000839050600033905060006001905060008590506040518061018001604052808681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018881526020016000151581526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001831515815260200160001515815260200182815250600560008781526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e082015181600701556101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff0219169083151502179055506101408201518160080160156101000a81548160ff02191690831515021790555061016082015181600901559050508873ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b8152600401610e3f939291906126db565b600060405180830381600087803b158015610e5957600080fd5b505af1158015610e6d573d6000803e3d6000fd5b50505050878973ffffffffffffffffffffffffffffffffffffffff16867fa3e1026b9bd8403b6dd39abf56e5149579f87a7cc35a609456b1a18e37a1b1a93360008c60008b8b8b60008c604051610ecc99989796959493929190612712565b60405180910390a45050505050600160008190555050505050565b60066020528060005260406000206000915090505481565b60026000541415610f45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3c90612954565b60405180910390fd5b600260008190555060006005600083815260200190815260200160002060020154905060006005600084815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006005600086815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506005600086815260200190815260200160002060080160149054906101000a900460ff16611085576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107c90612994565b60405180910390fd5b60056000868152602001908152602001600020600901544210156110de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d590612814565b60405180910390fd5b6005600086815260200190815260200160002060080160159054906101000a900460ff1615611142576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113990612934565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166005600087815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461139a57826005600087815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000808273ffffffffffffffffffffffffffffffffffffffff168460405161122890612658565b60006040518083038185875af1925050503d8060008114611265576040519150601f19603f3d011682016040523d82523d6000602084013e61126a565b606091505b5091509150816112af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a6906128d4565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff166323b872dd3087896040518463ffffffff1660e01b81526004016112ec939291906126db565b600060405180830381600087803b15801561130657600080fd5b505af115801561131a573d6000803e3d6000fd5b50505050611328600261203b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015611392573d6000803e3d6000fd5b50505061140a565b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd3083876040518463ffffffff1660e01b81526004016113d7939291906126db565b600060405180830381600087803b1580156113f157600080fd5b505af1158015611405573d6000803e3d6000fd5b505050505b60016005600087815260200190815260200160002060060160006101000a81548160ff02191690831515021790555060016005600087815260200190815260200160002060080160156101000a81548160ff0219169083151502179055507f0c56fedaf8b31b16b23df1099e474814624aa03855a462e2cd874afafe9c6d6286856005600089815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686866040516114d595949392919061279f565b60405180910390a15050505060016000819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6002600054141561155f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155690612954565b60405180910390fd5b600260008190555060006005600084815260200190815260200160002060020154905060006005600085815260200190815260200160002060070154905060006005600086815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560008781526020019081526020016000206009015490506005600087815260200190815260200160002060080160149054906101000a900460ff16611656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164d90612854565b60405180910390fd5b600560008781526020019081526020016000206009015442106116ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a590612874565b60405180910390fd5b60056000878152602001908152602001600020600701548511611706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116fd90612914565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166005600088815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461181357600560008781526020019081526020016000206007015460066000600560008a815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461180b9190612a24565b925050819055505b846005600088815260200190815260200160002060070181905550336005600088815260200190815260200160002060080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff16848873ffffffffffffffffffffffffffffffffffffffff167f6a082bd94c9a90ccdbd03a7ff9ca49e389ca6e3edeac1e3af7f3c09d122b89913360008089886040516118ea959493929190612688565b60405180910390a4505050506001600081905550505050565b60006005600083815260200190815260200160002060070154905060006005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550828110611a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1b90612894565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611a93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8a906128b4565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000803373ffffffffffffffffffffffffffffffffffffffff1683604051611aff90612658565b60006040518083038185875af1925050503d8060008114611b3c576040519150601f19603f3d011682016040523d82523d6000602084013e611b41565b606091505b509150915081611b86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7d90612974565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fbd534d3467660b93e3889762d2f386716c59899db5ea180d724f2c07955a7cf784604051611bcc91906129b4565b60405180910390a2505050505050565b60606000611bea600161202d565b905060008060005b83811015611c93573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611c229190612a24565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c8057600183611c7d9190612a24565b92505b8080611c8b90612b3e565b915050611bf2565b5060008267ffffffffffffffff811115611cd6577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611d0f57816020015b611cfc612051565b815260200190600190039081611cf45790505b50905060005b84811015612022573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611d459190612a24565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561200f57600060056000600184611da69190612a24565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610180016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152602001600782015481526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff16151515158152602001600982015481525050848681518110611ff2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018561200a9190612a24565b945050505b808061201a90612b3e565b915050611d15565b508094505050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b60405180610180016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600015158152602001600081525090565b60008135905061211f81612df4565b92915050565b60008135905061213481612e0b565b92915050565b60006020828403121561214c57600080fd5b600061215a84828501612110565b91505092915050565b6000806040838503121561217657600080fd5b600061218485828601612110565b925050602061219585828601612125565b9150509250929050565b6000806000606084860312156121b457600080fd5b60006121c286828701612110565b93505060206121d386828701612125565b92505060406121e486828701612125565b9150509250925092565b6000806000806080858703121561220457600080fd5b600061221287828801612110565b945050602061222387828801612125565b935050604061223487828801612125565b925050606061224587828801612125565b91505092959194509250565b60006020828403121561226357600080fd5b600061227184828501612125565b91505092915050565b60006122868383612544565b6101808301905092915050565b61229c81612b08565b82525050565b6122ab81612ac0565b82525050565b6122ba81612ac0565b82525050565b6122c981612aae565b82525050565b6122d881612aae565b82525050565b60006122e9826129df565b6122f381856129f7565b93506122fe836129cf565b8060005b8381101561232f578151612316888261227a565b9750612321836129ea565b925050600181019050612302565b5085935050505092915050565b61234581612ad2565b82525050565b61235481612ad2565b82525050565b6000612367601983612a13565b915061237282612bb6565b602082019050919050565b600061238a601b83612a13565b915061239582612bdf565b602082019050919050565b60006123ad600b83612a13565b91506123b882612c08565b602082019050919050565b60006123d0600683612a13565b91506123db82612c31565b602082019050919050565b60006123f3601b83612a13565b91506123fe82612c5a565b602082019050919050565b6000612416601383612a13565b915061242182612c83565b602082019050919050565b6000612439601683612a13565b915061244482612cac565b602082019050919050565b600061245c602483612a13565b915061246782612cd5565b604082019050919050565b600061247f600083612a08565b915061248a82612d24565b600082019050919050565b60006124a2601d83612a13565b91506124ad82612d27565b602082019050919050565b60006124c5601683612a13565b91506124d082612d50565b602082019050919050565b60006124e8601f83612a13565b91506124f382612d79565b602082019050919050565b600061250b601283612a13565b915061251682612da2565b602082019050919050565b600061252e601483612a13565b915061253982612dcb565b602082019050919050565b6101808201600082015161255b600085018261263a565b50602082015161256e60208501826122c0565b506040820151612581604085018261263a565b50606082015161259460608501826122a2565b5060808201516125a760808501826122a2565b5060a08201516125ba60a085018261263a565b5060c08201516125cd60c085018261233c565b5060e08201516125e060e085018261263a565b506101008201516125f56101008501826122c0565b5061012082015161260a61012085018261233c565b5061014082015161261f61014085018261233c565b5061016082015161263461016085018261263a565b50505050565b61264381612afe565b82525050565b61265281612afe565b82525050565b600061266382612472565b9150819050919050565b600060208201905061268260008301846122b1565b92915050565b600060a08201905061269d60008301886122cf565b6126aa60208301876122cf565b6126b7604083018661234b565b6126c46060830185612649565b6126d16080830184612649565b9695505050505050565b60006060820190506126f060008301866122cf565b6126fd60208301856122cf565b61270a6040830184612649565b949350505050565b600061012082019050612728600083018c6122cf565b612735602083018b6122cf565b612742604083018a612649565b61274f606083018961234b565b61275c6080830188612649565b61276960a08301876122cf565b61277660c083018661234b565b61278360e083018561234b565b612791610100830184612649565b9a9950505050505050505050565b600060a0820190506127b460008301886122cf565b6127c16020830187612649565b6127ce6040830186612293565b6127db60608301856122cf565b6127e86080830184612649565b9695505050505050565b6000602082019050818103600083015261280c81846122de565b905092915050565b6000602082019050818103600083015261282d8161235a565b9050919050565b6000602082019050818103600083015261284d8161237d565b9050919050565b6000602082019050818103600083015261286d816123a0565b9050919050565b6000602082019050818103600083015261288d816123c3565b9050919050565b600060208201905081810360008301526128ad816123e6565b9050919050565b600060208201905081810360008301526128cd81612409565b9050919050565b600060208201905081810360008301526128ed8161242c565b9050919050565b6000602082019050818103600083015261290d8161244f565b9050919050565b6000602082019050818103600083015261292d81612495565b9050919050565b6000602082019050818103600083015261294d816124b8565b9050919050565b6000602082019050818103600083015261296d816124db565b9050919050565b6000602082019050818103600083015261298d816124fe565b9050919050565b600060208201905081810360008301526129ad81612521565b9050919050565b60006020820190506129c96000830184612649565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000612a2f82612afe565b9150612a3a83612afe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a6f57612a6e612b87565b5b828201905092915050565b6000612a8582612afe565b9150612a9083612afe565b925082821015612aa357612aa2612b87565b5b828203905092915050565b6000612ab982612ade565b9050919050565b6000612acb82612ade565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612b1382612b1a565b9050919050565b6000612b2582612b2c565b9050919050565b6000612b3782612ade565b9050919050565b6000612b4982612afe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612b7c57612b7b612b87565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f41756374696f6e207374696c6c20696e2070726f677265737300000000000000600082015250565b7f5072696365206d7573742062652061746c656173742031207765690000000000600082015250565b7f4e6f742053746172746564000000000000000000000000000000000000000000600082015250565b7f456e646564210000000000000000000000000000000000000000000000000000600082015250565b7f596f752061726520746865206869676865737420626964646572210000000000600082015250565b7f596f7520617265207468652073656c6c65722100000000000000000000000000600082015250565b7f436f756c646e2774206372656469742073656c6c657200000000000000000000600082015250565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b50565b7f426964206973206c6f776572207468616e206869676865737420626964000000600082015250565b7f41756374696f6e20616c726561647920656e6465642100000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f436f756c64206e6f742077697468647261770000000000000000000000000000600082015250565b7f41756374696f6e206e6f74207374617274656421000000000000000000000000600082015250565b612dfd81612aae565b8114612e0857600080fd5b50565b612e1481612afe565b8114612e1f57600080fd5b5056fea264697066735822122015bfdaf037ec8a6d8f2928d423d009be7b1bcf9b8ab9d8b0db8701cf3c122a4364736f6c63430008040033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Market> {
    return super.deploy(overrides || {}) as Promise<Market>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
