/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Market, MarketInterface } from "../../contracts/Market";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Bid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
    ],
    name: "End",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "started",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "MarketItemCreatedOrAuctionEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "NewBidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawBid",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bids",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "endMarketAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "highestBid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidder",
            type: "address",
          },
          {
            internalType: "bool",
            name: "started",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "ended",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "highestBid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidder",
            type: "address",
          },
          {
            internalType: "bool",
            name: "started",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "ended",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "highestBid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidder",
            type: "address",
          },
          {
            internalType: "bool",
            name: "started",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "ended",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bid",
        type: "uint256",
      },
    ],
    name: "placeBidOnAuction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "withdrawBids",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405266354a6ba7a1800060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612b62806100746000396000f3fe60806040526004361061009c5760003560e01c806381b3fc231161006457806381b3fc231461017b5780638da5cb5b146101a4578063c78f19f9146101cf578063e346c7da146101fa578063edb5f90514610216578063f064c32e146102325761009c565b80630f08efe0146100a157806312e85585146100cc578063202e3740146100f757806358eb2df51461012257806362ea82db1461013e575b600080fd5b3480156100ad57600080fd5b506100b661025d565b6040516100c3919061257b565b60405180910390f35b3480156100d857600080fd5b506100e161062a565b6040516100ee919061271d565b60405180910390f35b34801561010357600080fd5b5061010c610634565b604051610119919061257b565b60405180910390f35b61013c60048036038101906101379190612010565b610a85565b005b34801561014a57600080fd5b5061016560048036038101906101609190611fab565b610ef4565b604051610172919061271d565b60405180910390f35b34801561018757600080fd5b506101a2600480360381019061019d9190611fd4565b610f0c565b005b3480156101b057600080fd5b506101b96113a3565b6040516101c69190612449565b60405180910390f35b3480156101db57600080fd5b506101e46113c9565b6040516101f1919061271d565b60405180910390f35b610214600480360381019061020f9190612010565b6113cf565b005b610230600480360381019061022b919061205f565b6117b9565b005b34801561023e57600080fd5b50610247611a4d565b604051610254919061257b565b60405180910390f35b6060600061026b6001611e9e565b905060006102796002611e9e565b6102836001611e9e565b61028d91906127e3565b90506000808267ffffffffffffffff8111156102d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561030b57816020015b6102f8611ec2565b8152602001906001900390816102f05790505b50905060005b8481101561061f57600073ffffffffffffffffffffffffffffffffffffffff1660056000600184610342919061278d565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561060c576000600560006001846103a3919061278d565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610180016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152602001600782015481526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff161515151581526020016009820154815250508486815181106105ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185610607919061278d565b945050505b808061061790612871565b915050610311565b508094505050505090565b6000600454905090565b606060006106426001611e9e565b905060008060005b838110156106eb573373ffffffffffffffffffffffffffffffffffffffff166005600060018461067a919061278d565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106d8576001836106d5919061278d565b92505b80806106e390612871565b91505061064a565b5060008267ffffffffffffffff81111561072e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561076757816020015b610754611ec2565b81526020019060019003908161074c5790505b50905060005b84811015610a7a573373ffffffffffffffffffffffffffffffffffffffff166005600060018461079d919061278d565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a67576000600560006001846107fe919061278d565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610180016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152602001600782015481526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff16151515158152602001600982015481525050848681518110610a4a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185610a62919061278d565b945050505b8080610a7290612871565b91505061076d565b508094505050505090565b60026000541415610acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac2906126bd565b60405180910390fd5b600260008190555060008111610b16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0d906125bd565b60405180910390fd5b6004543414610b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b519061265d565b60405180910390fd5b610b646001611eac565b6000610b706001611e9e565b90506000829050600033905060006001905060006202a30042610b93919061278d565b90506040518061018001604052808681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018881526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018781526020016000151581526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001831515815260200160001515815260200182815250600560008781526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e082015181600701556101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff0219169083151502179055506101408201518160080160156101000a81548160ff02191690831515021790555061016082015181600901559050508773ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b8152600401610e4d939291906124b7565b600060405180830381600087803b158015610e6757600080fd5b505af1158015610e7b573d6000803e3d6000fd5b50505050868873ffffffffffffffffffffffffffffffffffffffff16867f50accedd7c37ba7bd20910e3870947326a0bae4901ff0a72aa3274b5f6298bd73360008b60008b8b8b60008c604051610eda999897969594939291906124ee565b60405180910390a450505050506001600081905550505050565b60066020528060005260406000206000915090505481565b60026000541415610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f49906126bd565b60405180910390fd5b600260008190555060006005600083815260200190815260200160002060020154905060006005600084815260200190815260200160002060050154905060006005600085815260200190815260200160002060080160149054906101000a900460ff16905060006005600086815260200190815260200160002060090154905060006005600087815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560008881526020019081526020016000206007015490506005600088815260200190815260200160002060080160149054906101000a900460ff1661108c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611083906126fd565b60405180910390fd5b60056000888152602001908152602001600020600901544210156110e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dc9061259d565b60405180910390fd5b6005600088815260200190815260200160002060080160159054906101000a900460ff1615611149576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111409061269d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166005600089815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461132e576005600088815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561122f573d6000803e3d6000fd5b508773ffffffffffffffffffffffffffffffffffffffff166323b872dd3084896040518463ffffffff1660e01b815260040161126d939291906124b7565b600060405180830381600087803b15801561128757600080fd5b505af115801561129b573d6000803e3d6000fd5b50505050816005600089815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600089815260200190815260200160002060060160006101000a81548160ff02191690831515021790555061132d6002611eac565b5b858873ffffffffffffffffffffffffffffffffffffffff16887f50accedd7c37ba7bd20910e3870947326a0bae4901ff0a72aa3274b5f6298bd73360008a6000888a8d60008e604051611389999897969594939291906124ee565b60405180910390a450505050505060016000819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60026000541415611415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140c906126bd565b60405180910390fd5b600260008190555060006005600084815260200190815260200160002060020154905060006005600085815260200190815260200160002060070154905060006005600086815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560008781526020019081526020016000206009015490506005600087815260200190815260200160002060080160149054906101000a900460ff1661150c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611503906125dd565b60405180910390fd5b60056000878152602001908152602001600020600901544210611564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155b906125fd565b60405180910390fd5b600560008781526020019081526020016000206007015485116115bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b39061267d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166005600088815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146116c957600560008781526020019081526020016000206007015460066000600560008a815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116c1919061278d565b925050819055505b846005600088815260200190815260200160002060070181905550336005600088815260200190815260200160002060080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff16848873ffffffffffffffffffffffffffffffffffffffff167f6a082bd94c9a90ccdbd03a7ff9ca49e389ca6e3edeac1e3af7f3c09d122b89913360008089886040516117a0959493929190612464565b60405180910390a4505050506001600081905550505050565b60006005600083815260200190815260200160002060070154905060006005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110611895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188c9061261d565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fb9061263d565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000803373ffffffffffffffffffffffffffffffffffffffff168360405161197090612434565b60006040518083038185875af1925050503d80600081146119ad576040519150601f19603f3d011682016040523d82523d6000602084013e6119b2565b606091505b5091509150816119f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ee906126dd565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fbd534d3467660b93e3889762d2f386716c59899db5ea180d724f2c07955a7cf784604051611a3d919061271d565b60405180910390a2505050505050565b60606000611a5b6001611e9e565b905060008060005b83811015611b04573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611a93919061278d565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611af157600183611aee919061278d565b92505b8080611afc90612871565b915050611a63565b5060008267ffffffffffffffff811115611b47577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611b8057816020015b611b6d611ec2565b815260200190600190039081611b655790505b50905060005b84811015611e93573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611bb6919061278d565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611e8057600060056000600184611c17919061278d565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610180016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152602001600782015481526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff16151515158152602001600982015481525050848681518110611e63577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611e7b919061278d565b945050505b8080611e8b90612871565b915050611b86565b508094505050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b60405180610180016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600015158152602001600081525090565b600081359050611f9081612afe565b92915050565b600081359050611fa581612b15565b92915050565b600060208284031215611fbd57600080fd5b6000611fcb84828501611f81565b91505092915050565b60008060408385031215611fe757600080fd5b6000611ff585828601611f81565b925050602061200685828601611f96565b9150509250929050565b60008060006060848603121561202557600080fd5b600061203386828701611f81565b935050602061204486828701611f96565b925050604061205586828701611f96565b9150509250925092565b60006020828403121561207157600080fd5b600061207f84828501611f96565b91505092915050565b60006120948383612320565b6101808301905092915050565b6120aa81612829565b82525050565b6120b981612829565b82525050565b6120c881612817565b82525050565b6120d781612817565b82525050565b60006120e882612748565b6120f28185612760565b93506120fd83612738565b8060005b8381101561212e5781516121158882612088565b975061212083612753565b925050600181019050612101565b5085935050505092915050565b6121448161283b565b82525050565b6121538161283b565b82525050565b600061216660198361277c565b9150612171826128e9565b602082019050919050565b6000612189601b8361277c565b915061219482612912565b602082019050919050565b60006121ac600b8361277c565b91506121b78261293b565b602082019050919050565b60006121cf60068361277c565b91506121da82612964565b602082019050919050565b60006121f2601b8361277c565b91506121fd8261298d565b602082019050919050565b600061221560138361277c565b9150612220826129b6565b602082019050919050565b600061223860248361277c565b9150612243826129df565b604082019050919050565b600061225b600083612771565b915061226682612a2e565b600082019050919050565b600061227e601d8361277c565b915061228982612a31565b602082019050919050565b60006122a160168361277c565b91506122ac82612a5a565b602082019050919050565b60006122c4601f8361277c565b91506122cf82612a83565b602082019050919050565b60006122e760128361277c565b91506122f282612aac565b602082019050919050565b600061230a60148361277c565b915061231582612ad5565b602082019050919050565b610180820160008201516123376000850182612416565b50602082015161234a60208501826120bf565b50604082015161235d6040850182612416565b50606082015161237060608501826120a1565b50608082015161238360808501826120a1565b5060a082015161239660a0850182612416565b5060c08201516123a960c085018261213b565b5060e08201516123bc60e0850182612416565b506101008201516123d16101008501826120bf565b506101208201516123e661012085018261213b565b506101408201516123fb61014085018261213b565b50610160820151612410610160850182612416565b50505050565b61241f81612867565b82525050565b61242e81612867565b82525050565b600061243f8261224e565b9150819050919050565b600060208201905061245e60008301846120b0565b92915050565b600060a08201905061247960008301886120ce565b61248660208301876120ce565b612493604083018661214a565b6124a06060830185612425565b6124ad6080830184612425565b9695505050505050565b60006060820190506124cc60008301866120ce565b6124d960208301856120ce565b6124e66040830184612425565b949350505050565b600061012082019050612504600083018c6120ce565b612511602083018b6120ce565b61251e604083018a612425565b61252b606083018961214a565b6125386080830188612425565b61254560a08301876120ce565b61255260c083018661214a565b61255f60e083018561214a565b61256d610100830184612425565b9a9950505050505050505050565b6000602082019050818103600083015261259581846120dd565b905092915050565b600060208201905081810360008301526125b681612159565b9050919050565b600060208201905081810360008301526125d68161217c565b9050919050565b600060208201905081810360008301526125f68161219f565b9050919050565b60006020820190508181036000830152612616816121c2565b9050919050565b60006020820190508181036000830152612636816121e5565b9050919050565b6000602082019050818103600083015261265681612208565b9050919050565b600060208201905081810360008301526126768161222b565b9050919050565b6000602082019050818103600083015261269681612271565b9050919050565b600060208201905081810360008301526126b681612294565b9050919050565b600060208201905081810360008301526126d6816122b7565b9050919050565b600060208201905081810360008301526126f6816122da565b9050919050565b60006020820190508181036000830152612716816122fd565b9050919050565b60006020820190506127326000830184612425565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061279882612867565b91506127a383612867565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156127d8576127d76128ba565b5b828201905092915050565b60006127ee82612867565b91506127f983612867565b92508282101561280c5761280b6128ba565b5b828203905092915050565b600061282282612847565b9050919050565b600061283482612847565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061287c82612867565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156128af576128ae6128ba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f41756374696f6e207374696c6c20696e2070726f677265737300000000000000600082015250565b7f5072696365206d7573742062652061746c656173742031207765690000000000600082015250565b7f4e6f742053746172746564000000000000000000000000000000000000000000600082015250565b7f456e646564210000000000000000000000000000000000000000000000000000600082015250565b7f596f752061726520746865206869676865737420626964646572210000000000600082015250565b7f596f7520617265207468652073656c6c65722100000000000000000000000000600082015250565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b50565b7f426964206973206c6f776572207468616e206869676865737420626964000000600082015250565b7f41756374696f6e20616c726561647920656e6465642100000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f436f756c64206e6f742077697468647261770000000000000000000000000000600082015250565b7f41756374696f6e206e6f74207374617274656421000000000000000000000000600082015250565b612b0781612817565b8114612b1257600080fd5b50565b612b1e81612867565b8114612b2957600080fd5b5056fea2646970667358221220587f33e63333ace848c7e9f18f1bb749f1c184961bf575fe9bdfd27427b518cf64736f6c63430008040033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Market> {
    return super.deploy(overrides || {}) as Promise<Market>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
